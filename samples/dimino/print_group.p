import "dimino.p";

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
$ The main entry point for invoking the uperm implementation of diminos algorithm.
$
$ The permutation group S(n) is generated by a transposition and an n-cycle.
$ Extend the first element of 'generators' to build larger groups.
$ The order of S(n) is n! ... so we may not want to explore much higher than degree 7...
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

generators = [(1 2 3 4 5), (2 3)]; $ the generators out of which dimino() will build our group.

G = dimino(generators);

G = G[1:]; $ drop the filler element

print G;
print;
print " with size " + sizeof G;

